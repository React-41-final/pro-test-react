{"version":3,"sources":["components/diagram/Diagram.module.scss","components/pages/results/Results.module.scss","components/diagram/Diagram.js","img/catResultPage.png","components/pages/results/Results.js"],"names":["module","exports","Diagram","className","styles","container","chart","chartType","loader","data","options","pieStartAngle","pieSliceText","slices","0","color","1","chartArea","left","top","width","height","rootProps","answers","textAnswers","textAnswersNumber","Results","results","resultTitle","resultName","catImages","src","alt","mainMessage","secondaryMessage","to","routes","test","buttonText","button","type"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,QAAU,yBAAyB,YAAc,6BAA6B,kBAAoB,qC,oBCA1LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,UAAY,2BAA2B,YAAc,6BAA6B,iBAAmB,kCAAkC,OAAS,wBAAwB,WAAa,8B,mGCkD/SC,EArCC,WACd,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,cAAC,IAAD,CACEF,UAAWC,IAAOE,MAClBC,UAAU,WACVC,OAAQ,gDACRC,KAAM,CACJ,CAAC,OAAQ,iBACT,CAAC,gBAAiB,IAClB,CAAC,iBAAkB,IAErBC,QAAS,CACPC,cAAe,IACfC,aAAc,OACdC,OAAQ,CACNC,EAAG,CAAEC,MAAO,WACZC,EAAG,CAAED,MAAO,YAEdE,UAAW,CAAEC,KAAM,IAAKC,IAAK,GAAIC,MAAO,MAAOC,OAAQ,QAEzDC,UAAW,CAAE,cAAe,OAE9B,sBAAKnB,UAAWC,IAAOmB,QAAvB,UACE,oBAAGpB,UAAWC,IAAOoB,YAArB,+BACoB,sBAAMrB,UAAWC,IAAOqB,kBAAxB,kBAGpB,oBAAGtB,UAAWC,IAAOoB,YAArB,+BACoB,sBAAMrB,UAAWC,IAAOqB,kBAAxB,0BC3Cb,MAA0B,0C,kBCmC1BC,UA1BC,WACd,OACE,sBAAKvB,UAAWC,IAAOuB,QAAvB,UACE,oBAAIxB,UAAWC,IAAOwB,YAAtB,qBACA,mBAAGzB,UAAWC,IAAOyB,WAArB,gCAGA,cAAC,EAAD,IAEA,qBAAK1B,UAAWC,IAAO0B,UAAWC,IAAKD,EAAWE,IAAI,QACtD,mBAAG7B,UAAWC,IAAO6B,YAArB,qBAEA,mBAAG9B,UAAWC,IAAO8B,iBAArB,yDAKA,cAAC,IAAD,CAASC,GAAIC,IAAOC,KAAMlC,UAAWC,IAAOkC,WAA5C,SACE,wBAAQnC,UAAWC,IAAOmC,OAAQC,KAAK,SAAvC","file":"static/js/5.0c925951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Diagram_container__1LJtI\",\"chart\":\"Diagram_chart__3cbNf\",\"answers\":\"Diagram_answers__3RRdO\",\"textAnswers\":\"Diagram_textAnswers__jcPn2\",\"textAnswersNumber\":\"Diagram_textAnswersNumber__1ssSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"Results_results__36ksw\",\"resultTitle\":\"Results_resultTitle__kqZEC\",\"resultName\":\"Results_resultName__3vN2n\",\"catImages\":\"Results_catImages__3YOpD\",\"mainMessage\":\"Results_mainMessage__oURWo\",\"secondaryMessage\":\"Results_secondaryMessage__10iRQ\",\"button\":\"Results_button__21ydw\",\"buttonText\":\"Results_buttonText__zmvm5\"};","// import React from \"react\";\r\n\r\n// const Diagram = () => {\r\n//   return <h3>Diagram</h3>;\r\n// };\r\n\r\n// export default Diagram;\r\n\r\nimport React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport styles from \"./Diagram.module.scss\";\r\n\r\n// const indexChart = window.innerWidth >= 768 ? 160 : 0;\r\n\r\nconst Diagram = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Chart\r\n        className={styles.chart}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          [\"Task\", \"Hours per Day\"],\r\n          [\"92%  Correct \", 11], //Динамические данные\r\n          [\"8%  Incorrect \", 2], //Динамические данные\r\n        ]}\r\n        options={{\r\n          pieStartAngle: 100,\r\n          pieSliceText: \"none\",\r\n          slices: {\r\n            0: { color: \"#FF6B01\" },\r\n            1: { color: \"#D7D7D7\" },\r\n          },\r\n          chartArea: { left: 100, top: 10, width: \"90%\", height: \"90%\" },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"1\" }}\r\n      />\r\n      <div className={styles.answers}>\r\n        <p className={styles.textAnswers}>\r\n          Correct answers - <span className={styles.textAnswersNumber}>9</span>\r\n          {/* Динамические данные */}\r\n        </p>\r\n        <p className={styles.textAnswers}>\r\n          Total questions - <span className={styles.textAnswersNumber}>13</span>\r\n          {/* Динамические данные */}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagram;\r\n","export default __webpack_public_path__ + \"static/media/catResultPage.aa40c4d6.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport routes from \"../../../routers/routers\";\r\nimport Diagram from \"../../diagram/Diagram\";\r\nimport catImages from \"../../../img/catResultPage.png\";\r\n\r\nimport styles from \"./Results.module.scss\";\r\n\r\nconst Results = () => {\r\n  return (\r\n    <div className={styles.results}>\r\n      <h2 className={styles.resultTitle}>Results</h2>\r\n      <p className={styles.resultName}>[ Testing theory_]</p>\r\n      {/* Динамические данные */}\r\n\r\n      <Diagram />\r\n\r\n      <img className={styles.catImages} src={catImages} alt=\"cat\"></img>\r\n      <p className={styles.mainMessage}>Not Bad</p>\r\n      {/* Динамические данные */}\r\n      <p className={styles.secondaryMessage}>\r\n        But you still need to learn some materials.\r\n      </p>\r\n      {/* Динамические данные */}\r\n\r\n      <NavLink to={routes.test} className={styles.buttonText}>\r\n        <button className={styles.button} type=\"button\">\r\n          Try again\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"],"sourceRoot":""}