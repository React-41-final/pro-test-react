{"version":3,"sources":["components/authForm/AuthForm.module.scss","components/authForm/modalErrorMessage/ModalErrorMessage.module.scss","components/authForm/modalAnimation.module.scss","components/pages/authPage/AuthPage.module.scss","components/authForm/modalErrorMessage/ModalErrorMessage.js","components/authForm/AuthForm.js","components/pages/authPage/AuthPage.js"],"names":["module","exports","ModalErrorMessage","className","s","container","AuthForm","state","email","password","isModal","onHandleChange","e","target","name","value","setState","onHandleSubmit","a","preventDefault","nativeEvent","submitter","dataset","action","props","onLogin","onRegister","error","setTimeout","onToggleModal","onHandleSigIn","window","location","replace","this","CSSTransition","in","classNames","styles","timeout","unmountOnExit","desc","onClick","googleButton","form","onSubmit","type","input","placeholder","required","onChange","buttonContainer","button","data-action","Component","mapDispatchToProps","register","logIn","connect","auth","AuthPage","history","inner","box","header","content","contentAccent","isAuthenticated","token"],"mappings":"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","file":"static/js/4.ca7e6dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthForm_container__3RpKd\",\"desc\":\"AuthForm_desc__35nTW\",\"googleButton\":\"AuthForm_googleButton__1ovDP\",\"form\":\"AuthForm_form__2DxRZ\",\"input\":\"AuthForm_input__1h4DA\",\"buttonContainer\":\"AuthForm_buttonContainer__2nMqW\",\"button\":\"AuthForm_button__9MsW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModalErrorMessage_container__1qlaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"modalAnimation_enter__2dbtu\",\"enterActive\":\"modalAnimation_enterActive__1Gc1l\",\"exit\":\"modalAnimation_exit__Agf5f\",\"exitActive\":\"modalAnimation_exitActive__2L3y6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthPage_container__ie1Rh\",\"box\":\"AuthPage_box__3icuf\",\"header\":\"AuthPage_header__Ak9__\",\"content\":\"AuthPage_content__lZbMG\",\"contentAccent\":\"AuthPage_contentAccent__6kbAm\",\"inner\":\"AuthPage_inner__2pLUQ\"};","import s from \"./ModalErrorMessage.module.scss\";\r\n\r\nconst ModalErrorMessage = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <h3>WARNING</h3>\r\n      <p>Please make sure you're using a correct data</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { register, logIn } from \"../../redux/operations/authOperations\";\r\nimport s from \"./AuthForm.module.scss\";\r\nimport ModalErrorMessage from \"./modalErrorMessage/ModalErrorMessage\";\r\nimport styles from \"./modalAnimation.module.scss\";\r\n\r\nclass AuthForm extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isModal: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ email: \"\", password: \"\", isModal: false });\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const target = e.nativeEvent.submitter.dataset.action;\r\n\r\n    if (target === \"login\") {\r\n      await this.props.onLogin({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n    } else {\r\n      await this.props.onRegister({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n      await this.props.onLogin({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      });\r\n    }\r\n\r\n    if (!!this.props.error) {\r\n      this.setState({ isModal: true });\r\n      setTimeout(this.onToggleModal, 3000);\r\n    }\r\n  };\r\n\r\n  onHandleSigIn = async () => {\r\n    window.location.replace(\"https://protest-backend.goit.global/auth/google\");\r\n  };\r\n\r\n  onToggleModal = () => {\r\n    this.setState({ isModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, isModal } = this.state;\r\n    const { error } = this.props;\r\n    return (\r\n      <div className={s.container}>\r\n        <CSSTransition\r\n          in={!!error && isModal}\r\n          classNames={styles}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <ModalErrorMessage />\r\n        </CSSTransition>\r\n        <p className={s.desc}>You can use your Google Account to authorize:</p>\r\n\r\n        <button onClick={this.onHandleSigIn} className={s.googleButton}>\r\n          Google\r\n        </button>\r\n        <p className={s.desc}>Or login to our app using e-mail and password:</p>\r\n\r\n        <form className={s.form} onSubmit={this.onHandleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            className={s.input}\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"E-mail\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className={s.input}\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n          <div className={s.buttonContainer}>\r\n            <button type=\"submit\" className={s.button} data-action=\"login\">\r\n              Sign in\r\n            </button>\r\n            <button type=\"submit\" className={s.button} data-action=\"signup\">\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.auth.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: register,\r\n  onLogin: logIn,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AuthForm from \"../../authForm/AuthForm\";\r\nimport s from \"./AuthPage.module.scss\";\r\n\r\nclass AuthPage extends Component {\r\n  componentWillUnmount() {\r\n    this.props.history.replace(\"/\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.container}>\r\n        <div className={s.inner}>\r\n          <div className={s.box}>\r\n            <h2 className={s.header}>Pro Test</h2>\r\n            <p className={s.content}>\r\n              [ We will help you find weak points in knowledge so that you can\r\n              strengthen it. We will show you what is relevant to know for a{\" \"}\r\n              <span className={s.contentAccent}>QA Engineer</span> and will try\r\n              to make the learning process more diverse_ ]\r\n            </p>\r\n          </div>\r\n          <AuthForm history={this.props.history} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.token,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthPage);\r\n"],"sourceRoot":""}